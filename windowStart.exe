using System;
using System.Diagnostics;
using System.IO;
using System.Threading;

class Program
{
    static void Main()
    {
        Console.Title = "Next.js Server Manager";
        Console.OutputEncoding = System.Text.Encoding.UTF8;

        while (true)
        {
            Console.Clear();
            Console.WriteLine("==== 프로그램 관리 메뉴 ====");
            Console.WriteLine("1. 브라우저 열기 (http://localhost:3000)");
            Console.WriteLine("2. 실시간 업데이트");
            Console.WriteLine("3. 서버 종료");
            Console.WriteLine("4. 서버 다시 시작");
            Console.WriteLine("5. 종료 (터미널 포함)");
            Console.WriteLine("============================");
            Console.Write("선택: ");

            string choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    OpenBrowser();
                    break;
                case "2":
                    RealTimeUpdate();
                    break;
                case "3":
                    StopServer();
                    break;
                case "4":
                    RestartServer();
                    break;
                case "5":
                    ExitProgram();
                    return;
                default:
                    Console.WriteLine("유효하지 않은 선택입니다. 다시 시도하세요.");
                    Thread.Sleep(2000);
                    break;
            }
        }
    }

    static void OpenBrowser()
    {
        Console.WriteLine("브라우저를 여는 중...");
        Process.Start(new ProcessStartInfo("cmd", "/c start http://localhost:3000") { CreateNoWindow = true });
    }

    static void RealTimeUpdate()
    {
        Console.WriteLine("실시간 업데이트 중...");
        StopServer();
        RunCommand("git checkout main && git pull origin main");
        RunCommand("npm install -f");
        RunCommand("npm run build");
        StartServer();
    }

    static void StopServer()
    {
        Console.WriteLine("서버를 종료하는 중...");
        RunCommand("taskkill /IM node.exe /F");
        Console.WriteLine("서버가 종료되었습니다.");
    }

    static void RestartServer()
    {
        Console.WriteLine("서버를 다시 시작하는 중...");
        StopServer();
        StartServer();
    }

    static void StartServer()
    {
        Console.WriteLine("Next.js 서버를 시작하는 중...");
        RunCommand("start cmd /c \"npm start > server.log 2>&1\"");
        Thread.Sleep(5000); // 서버가 완전히 시작될 때까지 대기
        OpenBrowser();
    }

    static void ExitProgram()
    {
        Console.WriteLine("서버 및 프로그램을 종료하는 중...");
        StopServer();
        Console.WriteLine("프로그램이 종료됩니다.");
        Thread.Sleep(2000);
    }

    static void RunCommand(string command)
    {
        Process process = new Process();
        process.StartInfo.FileName = "cmd.exe";
        process.StartInfo.Arguments = $"/c {command}";
        process.StartInfo.RedirectStandardOutput = true;
        process.StartInfo.RedirectStandardError = true;
        process.StartInfo.UseShellExecute = false;
        process.StartInfo.CreateNoWindow = true;

        process.Start();
        process.WaitForExit();
    }
}
